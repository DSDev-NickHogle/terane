# ---------------------------------------------------------------------
# Server configuration
# ---------------------------------------------------------------------
[server]
# log server messages.  make sure terane-server has permission to write
# to this file.
log file = /var/log/terane.log
# log server messages of the specified severity level and above.  valid
# levels are DEBUG, INFO, WARNING, and ERROR.
log verbosity = INFO
# write pid file.  make sure terane-server has permission to write to
# this file.
pid file = /var/run/terane.pid
# log server statistics.
stats file = /var/lib/terane/statistics
# write out the statistics file at the specified interval.
stats sync interval = 1

# ---------------------------------------------------------------------
# Plugins configuration
# ---------------------------------------------------------------------
[plugin:protocol:xmlrpc]
# the address of the interface to listen on for xmlrpc requests.
listen address = 127.0.0.1
# the port to listen on for xmlrpc requests.
listen port = 45565

[plugin:input:file]

[plugin:input:syslog]

[plugin:input:collect]

[plugin:filter:syslog]

[plugin:filter:regex]

[plugin:filter:dt]

[plugin:filter:apache_common]

[plugin:filter:apache_combined]

[plugin:filter:mysql_server]

[plugin:filter:nagios]

[plugin:output:store]
# store database in the specified directory.  make sure this directory
# exists and terane-server has permission to write there.
data directory = /var/lib/terane/db

[plugin:output:forward]

# ---------------------------------------------------------------------
# Inputs configuration
# ---------------------------------------------------------------------
[input:messages]
type = file
file path = /var/log/messages

[input:daemon.log]
type = file
file path = /var/log/daemon.log

[input:mail.err]
type = file
file path = /var/log/mail.err

[input:syslog]
type = file
file path = /var/log/syslog

[input:kern.log]
type = file
file path = /var/log/kern.log

# ---------------------------------------------------------------------
# Filters configuration
# ---------------------------------------------------------------------
[filter:syslog]
type = syslog

# ---------------------------------------------------------------------
# Outputs configuration
# ---------------------------------------------------------------------
[output:local]
type = store
# create a new segment for every 10000 events.
segment rotation policy = 10000
# retain the 50 newest segments.
segment retention policy = 50

# ---------------------------------------------------------------------
# Routes configuration
# ---------------------------------------------------------------------
[route:messages_to_local]
input = messages
filter = syslog
output = local

[route:daemon.log_to_local]
input = daemon.log
filter = syslog
output = local

[route:mail.err_to_local]
input = mail.err
filter = syslog
output = local

[route:syslog_to_local]
input = syslog
filter = syslog
output = local

[route:kern.log_to_local]
input = kern.log
filter = syslog
output = local
